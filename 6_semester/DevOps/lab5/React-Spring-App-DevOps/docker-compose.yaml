version: '3.8'
services:
  mysql:
    env_file:
      - spring-backend/.env
    image: mysql:8.3
    hostname: mysql-db
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    environment:
      DB_HOST: "${DB_HOST:-mysql}"
      MYSQL_USER: "${MYSQL_USER:-yar_alex}"
      MYSQL_PORT: "${MYSQL_PORT:-3306}"
      MYSQL_DATABASE: "${MYSQL_DATABASE:-hobbie_db}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD:-qwerty}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD:-qwerty}"
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - my-network
  spring-back:
    env_file:
      - spring-backend/.env
    image: spring-back:1.0.0
    hostname: spring-backend
    build:
      context: spring-backend
      dockerfile: Dockerfile
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      DB_HOST: "${DB_HOST:-mysql}"
      MYSQL_USER: "${MYSQL_USER:-yar_alex}"
      MYSQL_PORT: "${MYSQL_PORT:-3306}"
      MYSQL_DATABASE: "${MYSQL_DATABASE:-hobbie_db}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD:-qwerty}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD:-qwerty}"
    volumes:
      - ./spring-backend/src/main/resources/application.properties:/app/spring-backend/src/main/resources/application.properties
      - ./spring-backend/.env:/app/spring-backend/.env
    networks:
      - my-network
  react-front:
    env_file:
      - react-frontend/.env
    image: react-front:1.0.0
    hostname: react-frontend
    build:
      context: react-frontend
      dockerfile: Dockerfile
    depends_on:
      - spring-back
    environment:
      REACT_APP_API_BASE_URL: "${REACT_APP_API_BASE_URL:-http://localhost:8080}"
    volumes:
      - ./react-frontend/nginx/site.conf:/etc/nginx/http.d/default.conf
      - ./react-frontend/nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - my-network
  nginx-proxy:
    image: nginx-proxy-alpine:1.0.0
    container_name: nginx-proxy
    build:
      context: nginx-proxy
      dockerfile: Dockerfile
    depends_on:
      - spring-back
      - react-front
    restart: unless-stopped
    ports:
      - 8080:80
    volumes:
      - ./nginx-proxy/site.conf:/etc/nginx/http.d/default.conf
      - ./nginx-proxy/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - my-network


volumes:
  db-data:

networks:
  my-network:
    driver: bridge
